on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      project_id:
        required: true
        type: string
      service_account_name:
        required: true
        type: string
      workload_identity_provider_name:
        required: true
        type: string

env:
  ENV: "${{ inputs.env }}"
  SENTRY_AUTH_TOKEN: "${{ secrets.SENTRY_AUTH_TOKEN }}"
  SENTRY_ORG: "${{ secrets.SENTRY_ORG }}"
  SENTRY_PROJECT: "${{ secrets.SENTRY_PROJECT }}"
  GCP_PROJECT_ID: "${{ inputs.project_id }}"

jobs:
  update-gke-image:
    runs-on: ubuntu-latest
    container: ghcr.io/uffizzicloud/platform_toolbox:v1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: gacts/github-slug@v1
        id: slug
      - id: 'ci_registry_auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.CI_IDENTITY_PROVIDER_LOCATION }}
          service_account: ${{ secrets.CI_SERVICE_ACCOUNT_NAME }}
      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.ci_registry_auth.outputs.access_token }}
      - name: Pull and tag CI image
        run: make pull_ci_image tag_image
      - id: 'registry_auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets[inputs.workload_identity_provider_name] }}
          service_account: ${{ secrets[inputs.service_account_name] }}
      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.registry_auth.outputs.access_token }}
      - name: Update GKE image
        run: |
          export CI_COMMIT_REF_SLUG=${{ steps.slug.outputs.branch-name-slug }}
          make push_gcp_controller

  update-gke-controller:
    runs-on: ubuntu-latest
    needs:
      - update-gke-image 
    container: 
      image: ghcr.io/uffizzicloud/platform_toolbox:v1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: ${{ secrets[inputs.workload_identity_provider_name] }}
          service_account: ${{ secrets[inputs.service_account_name] }}
      - uses: 'google-github-actions/get-gke-credentials@v0'
        with:
          cluster_name: uffizzi-client
          location: us-central1
      - name: Update gke controller
        run: make update_gke_controller_service

# ----------- sentry release and notification -----------

  create-sentry-release:
    runs-on: ubuntu-latest
    needs:
      - update-gke-image 
      - update-gke-controller
    container:
      image: ghcr.io/uffizzicloud/platform_toolbox:v1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - id: ci_registry_auth
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.CI_IDENTITY_PROVIDER_LOCATION }}
          service_account: ${{ secrets.CI_SERVICE_ACCOUNT_NAME }}
      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.ci_registry_auth.outputs.access_token }}
      - name: Create Sentry release
        run: make sentry_release
        # uses: getsentry/action-release@v1
        # env:
        #   SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        #   SENTRY_ORG: ${{ env.SENTRY_ORG }}
        #   SENTRY_PROJECT: ${{ env.SENTRY_PROJECT }}
        # with:
        #   environment: "${{ inputs.env }}"
        #   version: ${{ github.sha }}
        #   ignore_missing: true

  notify:
    needs:
      - update-gke-image 
      - update-gke-controller
      - create-sentry-release
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ env.WORKFLOW_CONCLUSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
