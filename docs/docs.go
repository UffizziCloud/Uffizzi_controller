// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Uffizzi Pro Support",
            "url": "https://support.uffizzi.com/",
            "email": "admin@uffizzi.cloud"
        },
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "welcome page and heartbeat",
                "produces": [
                    "text/html"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/default_ingress/service": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get the Default Ingress that handles most incoming requests.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "most errors including Not Found"
                    }
                }
            }
        },
        "/deployments/usage_metrics/containers": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Fetch memory usage for all containers within a Deployment.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "example": "2020-14-07T15:058:05Z07:00",
                        "name": "begin_at",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "deployment_ids[]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2020-14-07T16:58:05Z07:00",
                        "name": "end_at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2020-14-07T15:058:05Z07:00",
                        "name": "begin_at",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "deployment_ids[]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2020-14-07T16:58:05Z07:00",
                        "name": "end_at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2020-14-07T15:058:05Z07:00",
                        "name": "begin_at",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "deployment_ids[]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2020-14-07T16:58:05Z07:00",
                        "name": "end_at",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "most errors including Not Found"
                    }
                }
            }
        },
        "/deployments/{deploymentId}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Fetch the Kubernetes Namespace for a specified Uffizzi Deployment.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique Uffizzi Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "most errors including Not Found"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update Kubernetes Namespace.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique Uffizzi Deployment ID",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Uffizzi Deployment specification",
                        "name": "spec",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.deploymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "most internal errors"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create Kubernetes Namespace for a new Uffizzi Deployment.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique Uffizzi Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Uffizzi Deployment Specification",
                        "name": "spec",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.deploymentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created successfully"
                    },
                    "500": {
                        "description": "most internal errors"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete Kubernetes Namespace and all Resources within.",
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique Uffizzi Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content (success)"
                    },
                    "500": {
                        "description": "most internal errors"
                    }
                }
            }
        },
        "/deployments/{deploymentId}/config_files/{configFileId}": {
            "post": {
                "description": "create config file",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Config file ID",
                        "name": "configFileId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Specification",
                        "name": "spec",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.ApplyConfigFileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/deployments/{deploymentId}/containers": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Fetch metadata on all containers specified by a Deployment.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique Uffizzi Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "most errors including Not Found"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create or Update containers within a Deployment.",
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique Uffizzi Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "container specification",
                        "name": "spec",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.applyContainersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "most errors including Not Found"
                    }
                }
            }
        },
        "/deployments/{deploymentId}/containers/metrics": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Fetch metrics for all containers within a Deployment.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "most errors including Not Found"
                    }
                }
            }
        },
        "/deployments/{deploymentId}/containers/{containerName}/logs": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Fetch logs for a specific container.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique Uffizzi Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "container name",
                        "name": "containerName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "maximum number of lines to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "most errors including Not Found"
                    }
                }
            }
        },
        "/deployments/{deploymentId}/credentials": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Add or Update credential within a Deployment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique Uffizzi Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "credential specification",
                        "name": "spec",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.Credential"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created successfully"
                    },
                    "500": {
                        "description": "most errors including Not Found"
                    }
                }
            }
        },
        "/deployments/{deploymentId}/credentials/{credentialId}": {
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete credential from a Deployment.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique Uffizzi Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "сredential ID",
                        "name": "credentialId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "no content (success)"
                    },
                    "500": {
                        "description": "most errors including Not Found"
                    }
                }
            }
        },
        "/deployments/{deploymentId}/services": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get Kubernetes Service Resources for a Uffizzi Deployment.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique Uffizzi Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "most errors including Not Found"
                    }
                }
            }
        },
        "/nodes": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Fetch list of Kubernetes nodes.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "most errors including Not Found"
                    }
                }
            }
        },
        "/resources/{resourceId}": {
            "post": {
                "description": "Create or update Uffizzi Resource.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique Uffizzi Resource ID",
                        "name": "resourceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Uffizzi Resource specification",
                        "name": "spec",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.ApplyResourceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "http.ApplyConfigFileRequest": {
            "type": "object",
            "properties": {
                "config_file": {
                    "type": "string"
                }
            }
        },
        "http.ApplyResourceRequest": {
            "type": "object",
            "properties": {
                "resource": {
                    "type": "string"
                }
            }
        },
        "http.applyContainersRequest": {
            "type": "object",
            "properties": {
                "containers": {
                    "type": "string"
                },
                "credentials": {
                    "type": "string"
                },
                "deployment_url": {
                    "type": "string"
                },
                "resources": {
                    "type": "string"
                }
            }
        },
        "http.deploymentRequest": {
            "type": "object",
            "properties": {
                "kind": {
                    "type": "string"
                }
            }
        },
        "requests.GetContainersUsageMetricsRequestSpec": {
            "type": "object",
            "properties": {
                "begin_at": {
                    "type": "string",
                    "example": "2020-14-07T15:058:05Z07:00"
                },
                "deployment_ids[]": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "end_at": {
                    "type": "string",
                    "example": "2020-14-07T16:58:05Z07:00"
                }
            }
        },
        "types.Credential": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "registry_url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "Uffizzi Pro Controller",
	Description: "This controller runs within your Kubernetes Cluster and listens for declarative and imperative commands and queries from the Uffizzi Pro Portal.\n\nDirect API access is also supported.\n\nAll API HTTP Requests must include RFC 7617 headers for HTTP Basic Authentication, e.g. `Authorization: Basic <base64(username:password)>`\n",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
